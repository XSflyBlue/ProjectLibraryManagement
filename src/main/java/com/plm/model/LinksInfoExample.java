package com.plm.model;

import java.util.ArrayList;
import java.util.List;

public class LinksInfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public LinksInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andLiIdIsNull() {
			addCriterion("LI_ID is null");
			return (Criteria) this;
		}

		public Criteria andLiIdIsNotNull() {
			addCriterion("LI_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLiIdEqualTo(Integer value) {
			addCriterion("LI_ID =", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdNotEqualTo(Integer value) {
			addCriterion("LI_ID <>", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdGreaterThan(Integer value) {
			addCriterion("LI_ID >", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("LI_ID >=", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdLessThan(Integer value) {
			addCriterion("LI_ID <", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdLessThanOrEqualTo(Integer value) {
			addCriterion("LI_ID <=", value, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdIn(List<Integer> values) {
			addCriterion("LI_ID in", values, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdNotIn(List<Integer> values) {
			addCriterion("LI_ID not in", values, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdBetween(Integer value1, Integer value2) {
			addCriterion("LI_ID between", value1, value2, "liId");
			return (Criteria) this;
		}

		public Criteria andLiIdNotBetween(Integer value1, Integer value2) {
			addCriterion("LI_ID not between", value1, value2, "liId");
			return (Criteria) this;
		}

		public Criteria andLiNameIsNull() {
			addCriterion("LI_NAME is null");
			return (Criteria) this;
		}

		public Criteria andLiNameIsNotNull() {
			addCriterion("LI_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andLiNameEqualTo(String value) {
			addCriterion("LI_NAME =", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameNotEqualTo(String value) {
			addCriterion("LI_NAME <>", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameGreaterThan(String value) {
			addCriterion("LI_NAME >", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameGreaterThanOrEqualTo(String value) {
			addCriterion("LI_NAME >=", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameLessThan(String value) {
			addCriterion("LI_NAME <", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameLessThanOrEqualTo(String value) {
			addCriterion("LI_NAME <=", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameLike(String value) {
			addCriterion("LI_NAME like", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameNotLike(String value) {
			addCriterion("LI_NAME not like", value, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameIn(List<String> values) {
			addCriterion("LI_NAME in", values, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameNotIn(List<String> values) {
			addCriterion("LI_NAME not in", values, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameBetween(String value1, String value2) {
			addCriterion("LI_NAME between", value1, value2, "liName");
			return (Criteria) this;
		}

		public Criteria andLiNameNotBetween(String value1, String value2) {
			addCriterion("LI_NAME not between", value1, value2, "liName");
			return (Criteria) this;
		}

		public Criteria andLiUrlIsNull() {
			addCriterion("LI_URL is null");
			return (Criteria) this;
		}

		public Criteria andLiUrlIsNotNull() {
			addCriterion("LI_URL is not null");
			return (Criteria) this;
		}

		public Criteria andLiUrlEqualTo(String value) {
			addCriterion("LI_URL =", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlNotEqualTo(String value) {
			addCriterion("LI_URL <>", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlGreaterThan(String value) {
			addCriterion("LI_URL >", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlGreaterThanOrEqualTo(String value) {
			addCriterion("LI_URL >=", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlLessThan(String value) {
			addCriterion("LI_URL <", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlLessThanOrEqualTo(String value) {
			addCriterion("LI_URL <=", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlLike(String value) {
			addCriterion("LI_URL like", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlNotLike(String value) {
			addCriterion("LI_URL not like", value, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlIn(List<String> values) {
			addCriterion("LI_URL in", values, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlNotIn(List<String> values) {
			addCriterion("LI_URL not in", values, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlBetween(String value1, String value2) {
			addCriterion("LI_URL between", value1, value2, "liUrl");
			return (Criteria) this;
		}

		public Criteria andLiUrlNotBetween(String value1, String value2) {
			addCriterion("LI_URL not between", value1, value2, "liUrl");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table links_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table links_info
     *
     * @mbg.generated do_not_delete_during_merge Sun May 06 20:50:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}