package com.plm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OpinionInfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public OpinionInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andOIdIsNull() {
			addCriterion("O_ID is null");
			return (Criteria) this;
		}

		public Criteria andOIdIsNotNull() {
			addCriterion("O_ID is not null");
			return (Criteria) this;
		}

		public Criteria andOIdEqualTo(Integer value) {
			addCriterion("O_ID =", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdNotEqualTo(Integer value) {
			addCriterion("O_ID <>", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdGreaterThan(Integer value) {
			addCriterion("O_ID >", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("O_ID >=", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdLessThan(Integer value) {
			addCriterion("O_ID <", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdLessThanOrEqualTo(Integer value) {
			addCriterion("O_ID <=", value, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdIn(List<Integer> values) {
			addCriterion("O_ID in", values, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdNotIn(List<Integer> values) {
			addCriterion("O_ID not in", values, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdBetween(Integer value1, Integer value2) {
			addCriterion("O_ID between", value1, value2, "oId");
			return (Criteria) this;
		}

		public Criteria andOIdNotBetween(Integer value1, Integer value2) {
			addCriterion("O_ID not between", value1, value2, "oId");
			return (Criteria) this;
		}

		public Criteria andPpiIdIsNull() {
			addCriterion("PPI_ID is null");
			return (Criteria) this;
		}

		public Criteria andPpiIdIsNotNull() {
			addCriterion("PPI_ID is not null");
			return (Criteria) this;
		}

		public Criteria andPpiIdEqualTo(Integer value) {
			addCriterion("PPI_ID =", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdNotEqualTo(Integer value) {
			addCriterion("PPI_ID <>", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdGreaterThan(Integer value) {
			addCriterion("PPI_ID >", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("PPI_ID >=", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdLessThan(Integer value) {
			addCriterion("PPI_ID <", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdLessThanOrEqualTo(Integer value) {
			addCriterion("PPI_ID <=", value, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdIn(List<Integer> values) {
			addCriterion("PPI_ID in", values, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdNotIn(List<Integer> values) {
			addCriterion("PPI_ID not in", values, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdBetween(Integer value1, Integer value2) {
			addCriterion("PPI_ID between", value1, value2, "ppiId");
			return (Criteria) this;
		}

		public Criteria andPpiIdNotBetween(Integer value1, Integer value2) {
			addCriterion("PPI_ID not between", value1, value2, "ppiId");
			return (Criteria) this;
		}

		public Criteria andOUTypeIsNull() {
			addCriterion("O_U_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andOUTypeIsNotNull() {
			addCriterion("O_U_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andOUTypeEqualTo(Integer value) {
			addCriterion("O_U_TYPE =", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeNotEqualTo(Integer value) {
			addCriterion("O_U_TYPE <>", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeGreaterThan(Integer value) {
			addCriterion("O_U_TYPE >", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("O_U_TYPE >=", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeLessThan(Integer value) {
			addCriterion("O_U_TYPE <", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeLessThanOrEqualTo(Integer value) {
			addCriterion("O_U_TYPE <=", value, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeIn(List<Integer> values) {
			addCriterion("O_U_TYPE in", values, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeNotIn(List<Integer> values) {
			addCriterion("O_U_TYPE not in", values, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeBetween(Integer value1, Integer value2) {
			addCriterion("O_U_TYPE between", value1, value2, "oUType");
			return (Criteria) this;
		}

		public Criteria andOUTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("O_U_TYPE not between", value1, value2, "oUType");
			return (Criteria) this;
		}

		public Criteria andOContentIsNull() {
			addCriterion("O_CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andOContentIsNotNull() {
			addCriterion("O_CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andOContentEqualTo(String value) {
			addCriterion("O_CONTENT =", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentNotEqualTo(String value) {
			addCriterion("O_CONTENT <>", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentGreaterThan(String value) {
			addCriterion("O_CONTENT >", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentGreaterThanOrEqualTo(String value) {
			addCriterion("O_CONTENT >=", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentLessThan(String value) {
			addCriterion("O_CONTENT <", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentLessThanOrEqualTo(String value) {
			addCriterion("O_CONTENT <=", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentLike(String value) {
			addCriterion("O_CONTENT like", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentNotLike(String value) {
			addCriterion("O_CONTENT not like", value, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentIn(List<String> values) {
			addCriterion("O_CONTENT in", values, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentNotIn(List<String> values) {
			addCriterion("O_CONTENT not in", values, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentBetween(String value1, String value2) {
			addCriterion("O_CONTENT between", value1, value2, "oContent");
			return (Criteria) this;
		}

		public Criteria andOContentNotBetween(String value1, String value2) {
			addCriterion("O_CONTENT not between", value1, value2, "oContent");
			return (Criteria) this;
		}

		public Criteria andOTimeIsNull() {
			addCriterion("O_TIME is null");
			return (Criteria) this;
		}

		public Criteria andOTimeIsNotNull() {
			addCriterion("O_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andOTimeEqualTo(Date value) {
			addCriterionForJDBCDate("O_TIME =", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("O_TIME <>", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("O_TIME >", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("O_TIME >=", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeLessThan(Date value) {
			addCriterionForJDBCDate("O_TIME <", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("O_TIME <=", value, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeIn(List<Date> values) {
			addCriterionForJDBCDate("O_TIME in", values, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("O_TIME not in", values, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("O_TIME between", value1, value2, "oTime");
			return (Criteria) this;
		}

		public Criteria andOTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("O_TIME not between", value1, value2, "oTime");
			return (Criteria) this;
		}

		public Criteria andOStatusIsNull() {
			addCriterion("O_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andOStatusIsNotNull() {
			addCriterion("O_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andOStatusEqualTo(Integer value) {
			addCriterion("O_STATUS =", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusNotEqualTo(Integer value) {
			addCriterion("O_STATUS <>", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusGreaterThan(Integer value) {
			addCriterion("O_STATUS >", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("O_STATUS >=", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusLessThan(Integer value) {
			addCriterion("O_STATUS <", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusLessThanOrEqualTo(Integer value) {
			addCriterion("O_STATUS <=", value, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusIn(List<Integer> values) {
			addCriterion("O_STATUS in", values, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusNotIn(List<Integer> values) {
			addCriterion("O_STATUS not in", values, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusBetween(Integer value1, Integer value2) {
			addCriterion("O_STATUS between", value1, value2, "oStatus");
			return (Criteria) this;
		}

		public Criteria andOStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("O_STATUS not between", value1, value2, "oStatus");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table opinion_info
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table opinion_info
     *
     * @mbg.generated do_not_delete_during_merge Sun May 06 20:50:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}