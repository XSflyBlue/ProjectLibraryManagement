package com.plm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProjectPlanExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public ProjectPlanExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andPpIdIsNull() {
			addCriterion("PP_ID is null");
			return (Criteria) this;
		}

		public Criteria andPpIdIsNotNull() {
			addCriterion("PP_ID is not null");
			return (Criteria) this;
		}

		public Criteria andPpIdEqualTo(Integer value) {
			addCriterion("PP_ID =", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdNotEqualTo(Integer value) {
			addCriterion("PP_ID <>", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdGreaterThan(Integer value) {
			addCriterion("PP_ID >", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("PP_ID >=", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdLessThan(Integer value) {
			addCriterion("PP_ID <", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdLessThanOrEqualTo(Integer value) {
			addCriterion("PP_ID <=", value, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdIn(List<Integer> values) {
			addCriterion("PP_ID in", values, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdNotIn(List<Integer> values) {
			addCriterion("PP_ID not in", values, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdBetween(Integer value1, Integer value2) {
			addCriterion("PP_ID between", value1, value2, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpIdNotBetween(Integer value1, Integer value2) {
			addCriterion("PP_ID not between", value1, value2, "ppId");
			return (Criteria) this;
		}

		public Criteria andPpNameIsNull() {
			addCriterion("PP_NAME is null");
			return (Criteria) this;
		}

		public Criteria andPpNameIsNotNull() {
			addCriterion("PP_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andPpNameEqualTo(String value) {
			addCriterion("PP_NAME =", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameNotEqualTo(String value) {
			addCriterion("PP_NAME <>", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameGreaterThan(String value) {
			addCriterion("PP_NAME >", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameGreaterThanOrEqualTo(String value) {
			addCriterion("PP_NAME >=", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameLessThan(String value) {
			addCriterion("PP_NAME <", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameLessThanOrEqualTo(String value) {
			addCriterion("PP_NAME <=", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameLike(String value) {
			addCriterion("PP_NAME like", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameNotLike(String value) {
			addCriterion("PP_NAME not like", value, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameIn(List<String> values) {
			addCriterion("PP_NAME in", values, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameNotIn(List<String> values) {
			addCriterion("PP_NAME not in", values, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameBetween(String value1, String value2) {
			addCriterion("PP_NAME between", value1, value2, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpNameNotBetween(String value1, String value2) {
			addCriterion("PP_NAME not between", value1, value2, "ppName");
			return (Criteria) this;
		}

		public Criteria andPpYearIsNull() {
			addCriterion("PP_YEAR is null");
			return (Criteria) this;
		}

		public Criteria andPpYearIsNotNull() {
			addCriterion("PP_YEAR is not null");
			return (Criteria) this;
		}

		public Criteria andPpYearEqualTo(String value) {
			addCriterion("PP_YEAR =", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearNotEqualTo(String value) {
			addCriterion("PP_YEAR <>", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearGreaterThan(String value) {
			addCriterion("PP_YEAR >", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearGreaterThanOrEqualTo(String value) {
			addCriterion("PP_YEAR >=", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearLessThan(String value) {
			addCriterion("PP_YEAR <", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearLessThanOrEqualTo(String value) {
			addCriterion("PP_YEAR <=", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearLike(String value) {
			addCriterion("PP_YEAR like", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearNotLike(String value) {
			addCriterion("PP_YEAR not like", value, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearIn(List<String> values) {
			addCriterion("PP_YEAR in", values, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearNotIn(List<String> values) {
			addCriterion("PP_YEAR not in", values, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearBetween(String value1, String value2) {
			addCriterion("PP_YEAR between", value1, value2, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpYearNotBetween(String value1, String value2) {
			addCriterion("PP_YEAR not between", value1, value2, "ppYear");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeIsNull() {
			addCriterion("PP_START_TIME is null");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeIsNotNull() {
			addCriterion("PP_START_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeEqualTo(Date value) {
			addCriterionForJDBCDate("PP_START_TIME =", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("PP_START_TIME <>", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("PP_START_TIME >", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_START_TIME >=", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeLessThan(Date value) {
			addCriterionForJDBCDate("PP_START_TIME <", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_START_TIME <=", value, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeIn(List<Date> values) {
			addCriterionForJDBCDate("PP_START_TIME in", values, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("PP_START_TIME not in", values, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_START_TIME between", value1, value2, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpStartTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_START_TIME not between", value1, value2, "ppStartTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeIsNull() {
			addCriterion("PP_MID_TIME is null");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeIsNotNull() {
			addCriterion("PP_MID_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeEqualTo(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME =", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME <>", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME >", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME >=", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeLessThan(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME <", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_MID_TIME <=", value, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeIn(List<Date> values) {
			addCriterionForJDBCDate("PP_MID_TIME in", values, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("PP_MID_TIME not in", values, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_MID_TIME between", value1, value2, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpMidTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_MID_TIME not between", value1, value2, "ppMidTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeIsNull() {
			addCriterion("PP_END_TIME is null");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeIsNotNull() {
			addCriterion("PP_END_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeEqualTo(Date value) {
			addCriterionForJDBCDate("PP_END_TIME =", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("PP_END_TIME <>", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("PP_END_TIME >", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_END_TIME >=", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeLessThan(Date value) {
			addCriterionForJDBCDate("PP_END_TIME <", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PP_END_TIME <=", value, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeIn(List<Date> values) {
			addCriterionForJDBCDate("PP_END_TIME in", values, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("PP_END_TIME not in", values, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_END_TIME between", value1, value2, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andPpEndTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PP_END_TIME not between", value1, value2, "ppEndTime");
			return (Criteria) this;
		}

		public Criteria andStuNumIsNull() {
			addCriterion("STU_NUM is null");
			return (Criteria) this;
		}

		public Criteria andStuNumIsNotNull() {
			addCriterion("STU_NUM is not null");
			return (Criteria) this;
		}

		public Criteria andStuNumEqualTo(Integer value) {
			addCriterion("STU_NUM =", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumNotEqualTo(Integer value) {
			addCriterion("STU_NUM <>", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumGreaterThan(Integer value) {
			addCriterion("STU_NUM >", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("STU_NUM >=", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumLessThan(Integer value) {
			addCriterion("STU_NUM <", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumLessThanOrEqualTo(Integer value) {
			addCriterion("STU_NUM <=", value, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumIn(List<Integer> values) {
			addCriterion("STU_NUM in", values, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumNotIn(List<Integer> values) {
			addCriterion("STU_NUM not in", values, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumBetween(Integer value1, Integer value2) {
			addCriterion("STU_NUM between", value1, value2, "stuNum");
			return (Criteria) this;
		}

		public Criteria andStuNumNotBetween(Integer value1, Integer value2) {
			addCriterion("STU_NUM not between", value1, value2, "stuNum");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeIsNull() {
			addCriterion("ACCEPT_TIME is null");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeIsNotNull() {
			addCriterion("ACCEPT_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeEqualTo(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME =", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME <>", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME >", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME >=", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeLessThan(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME <", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ACCEPT_TIME <=", value, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeIn(List<Date> values) {
			addCriterionForJDBCDate("ACCEPT_TIME in", values, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("ACCEPT_TIME not in", values, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ACCEPT_TIME between", value1, value2, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andAcceptTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ACCEPT_TIME not between", value1, value2, "acceptTime");
			return (Criteria) this;
		}

		public Criteria andTuStuNumIsNull() {
			addCriterion("TU_STU_NUM is null");
			return (Criteria) this;
		}

		public Criteria andTuStuNumIsNotNull() {
			addCriterion("TU_STU_NUM is not null");
			return (Criteria) this;
		}

		public Criteria andTuStuNumEqualTo(Integer value) {
			addCriterion("TU_STU_NUM =", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumNotEqualTo(Integer value) {
			addCriterion("TU_STU_NUM <>", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumGreaterThan(Integer value) {
			addCriterion("TU_STU_NUM >", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("TU_STU_NUM >=", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumLessThan(Integer value) {
			addCriterion("TU_STU_NUM <", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumLessThanOrEqualTo(Integer value) {
			addCriterion("TU_STU_NUM <=", value, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumIn(List<Integer> values) {
			addCriterion("TU_STU_NUM in", values, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumNotIn(List<Integer> values) {
			addCriterion("TU_STU_NUM not in", values, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumBetween(Integer value1, Integer value2) {
			addCriterion("TU_STU_NUM between", value1, value2, "tuStuNum");
			return (Criteria) this;
		}

		public Criteria andTuStuNumNotBetween(Integer value1, Integer value2) {
			addCriterion("TU_STU_NUM not between", value1, value2, "tuStuNum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table project_plan
	 * @mbg.generated  Tue May 15 22:59:52 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table project_plan
     *
     * @mbg.generated do_not_delete_during_merge Sun May 06 20:50:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}